package com.HomeAssigment.ex1;import static org.junit.jupiter.api.Assertions.*;import org.junit.jupiter.api.BeforeEach;import org.junit.jupiter.api.Test;public class BinaryTreeTest {    private BinaryTree tree;    @BeforeEach    public void setUp() {        tree = new BinaryTree();    }    @Test    public void testFindMax() {        tree.insert(5);        tree.insert(3);        tree.insert(2);        tree.insert(10);        tree.insert(11);        assertEquals(11, tree.findMax());    }    @Test    public void testFindMaxEmptyTree() {        Exception exception = assertThrows(IllegalStateException.class, () -> {            tree.findMax();        });        String expectedMessage = "Tree is empty";        String actualMessage = exception.getMessage();        assertTrue(actualMessage.contains(expectedMessage));    }    @Test    public void testCalculateDepth() {        tree.insert(5);        tree.insert(3);        tree.insert(2);        tree.insert(10);        tree.insert(11);        assertEquals(3, tree.calculateDepth());    }    @Test    public void testCalculateDepthEmptyTree() {        assertEquals(0, tree.calculateDepth());    }}