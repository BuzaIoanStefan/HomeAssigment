package com.HomeAssigment.ex2;import org.junit.jupiter.api.Test;import static org.junit.jupiter.api.Assertions.*;import java.io.ByteArrayOutputStream;import java.io.PrintStream;public class PingPongManagerTest {    @Test    public void testPingPongAlternation() throws InterruptedException {        // Redirect System.out to capture console output        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();        PrintStream originalOut = System.out;        System.setOut(new PrintStream(outputStream));        PingPongManager manager = new PingPongManager();        // Create threads to call printPing and printPong        Thread pingThread = new Thread(() -> {            for (int i = 0; i < 5; i++) {                manager.printPing();            }        });        Thread pongThread = new Thread(() -> {            for (int i = 0; i < 5; i++) {                manager.printPong();            }        });        // Start the threads        pingThread.start();        pongThread.start();        // Wait for the threads to finish        pingThread.join();        pongThread.join();        // Restore System.out        System.setOut(originalOut);        // Get the captured output        String output = outputStream.toString().trim();        String[] lines = output.split("\n");        // Verify that "ping" and "pong" alternate correctly        for (int i = 0; i < lines.length; i++) {            if (i % 2 == 0) {                assertEquals("ping", lines[i], "Expected 'ping' at even index " + i);            } else {                assertEquals("pong", lines[i], "Expected 'pong' at odd index " + i);            }        }    }}