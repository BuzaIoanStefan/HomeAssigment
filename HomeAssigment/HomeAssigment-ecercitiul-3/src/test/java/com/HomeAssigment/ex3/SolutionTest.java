package com.HomeAssigment.ex3;import org.junit.jupiter.api.Assertions;import org.junit.jupiter.api.Test;import static org.junit.jupiter.api.Assertions.assertEquals;import static org.junit.jupiter.api.Assertions.assertThrows;public class SolutionTest {    @Test    public void testExampleCases() {        Solution solution = new Solution();        assertEquals(140, solution.solution(new int[]{130, 191, 200, 10}));        assertEquals(600, solution.solution(new int[]{405, 45, 300, 300}));        assertEquals(-1, solution.solution(new int[]{50, 222, 49, 52, 25}));        assertEquals(9918, solution.solution(new int[]{30, 909, 3190, 99, 3990, 9009}));    }    @Test    public void testEdgeCases() {        Solution solution = new Solution();        assertThrows(IllegalArgumentException.class, () -> solution.solution(null));        assertThrows(IllegalArgumentException.class, () -> solution.solution(new int[]{}));        assertThrows(IllegalArgumentException.class, () -> solution.solution(new int[]{5}));    }    @Test    public void testAdditionalCases() {        Solution solution = new Solution();        assertEquals(22, solution.solution(new int[]{11, 11}));        assertEquals(-1, solution.solution(new int[]{101, 100, 99}));        assertEquals(200, solution.solution(new int[]{100, 100, 100}));    }    @Test    public void testOnlyOneInput(){        Solution solution= new Solution();        assertThrows(IllegalArgumentException.class, () ->solution.solution(new int[]{22}));    }    @Test    public void testNullInput(){        Solution solution= new Solution();        assertThrows(IllegalArgumentException.class, () ->solution.solution(null));    }}